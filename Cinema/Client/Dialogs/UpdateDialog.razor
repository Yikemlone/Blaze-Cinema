@using Cinema.Shared.DTO
@inject ISnackbar Snackbar

<MudDialog>

    <DialogContent>
        <MudPaper>
            <MudForm>
                <MudStack Row=true>
                    <MudTextField T="string" Label="Name" Variant="Variant.Filled" @bind-Value=Movie.Name> </MudTextField>
                    <MudSelect @bind-Value="Movie.AgeRating" Required RequiredError="You must select a Position!!!">
                        <MudSelectItem Value="@("G")">  G </MudSelectItem>
                        <MudSelectItem Value="@("PG")"> PG </MudSelectItem>
                        <MudSelectItem Value="@("12A")"> 12A </MudSelectItem>
                        <MudSelectItem Value="@("15A")"> 15A </MudSelectItem>
                        <MudSelectItem Value="@("16")"> 16 </MudSelectItem>
                        <MudSelectItem Value="@("18")"> 18 </MudSelectItem>
                    </MudSelect>
                    <MudTextField T="int" Label="Duration" Variant="Variant.Filled" @bind-Value=@Movie.Duration></MudTextField>
                </MudStack>
                <MudStack Row=true>
                    <MudTextField T="string" Label="Description" Variant="Variant.Filled" @bind-Value=Movie.Description Lines="5"></MudTextField>
                </MudStack>
            </MudForm>
        </MudPaper>
    </DialogContent>

    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Close">Save</MudButton>
        <MudButton Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
    </DialogActions>

</MudDialog>


@code {
    private const string API_URL = "api/admin";
    private HttpClient _client;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public MovieDTO Movie { get; set; } // Bind this value to the text fields

    protected override async Task OnInitializedAsync()
    {
        _client = new HttpClient() { BaseAddress = new Uri("https://localhost:7016") };
    }

    void Close() 
    { 
        Snackbar.Configuration.SnackbarVariant = Variant.Outlined;
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
        Snackbar.Add("Movie Updated", Severity.Success, config =>
        {
            config.VisibleStateDuration = 1000;
            config.Icon = @Icons.Material.Outlined.Check;
        });

        await UpdateMovieModel();

        MudDialog.Close(DialogResult.Ok(true));
    }

    void Cancel() 
    { 
        MudDialog.Close(DialogResult.Cancel()); 
    }

    private async Task UpdateMovieModel() 
    {
        await _client.PostAsJsonAsync<MovieDTO>(API_URL + $"/update/", Movie);
    }

}
