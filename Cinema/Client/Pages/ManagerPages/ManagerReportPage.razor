@page "/manager/report"
@attribute [Authorize(Policy = "IsManager")]

<PageTitle>Screenings</PageTitle>

<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.ExtraLarge">

    <MudPaper Class="pa-4 mt-4" Elevation="1">
        <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
    </MudPaper>

    <MudPaper Class="justify-center align-content-center pa-16 mt-4" Elevation="1">
        @code {
        private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.

        public List<ChartSeries> Series = new List<ChartSeries>()
        {
        new ChartSeries() { Name = "Titanic 3D", Data = new double[] { 40, 20, 25, 27, 46, 60, 15 } },
        new ChartSeries() { Name = "Puss in Boots", Data = new double[] { 19, 24, 35, 13, 28, 15, 31 } },
        new ChartSeries() { Name = "Avatar: The Way of Water", Data = new double[] { 8, 6, 11, 13, 4, 16, 18 } },
        new ChartSeries() { Name = "Strange World", Data = new double[] { 16, 12, 22, 26, 8, 32, 36 } },
        };
        public string[] XAxisLabels = { "Mon", "Tues", "Wed", "Thurs", "Fri", "Sat", "Sun" };
        }
        @code {
        private int Index2 = -1; //default value cannot be 0 -> first selectedindex is 0.
        int dataSize = 4;
        public double[] data = { 50, 25, 20, 5 };
        public string[] labels = { "Titanic 3D", "Puss in Boots", "Avatar: The Way of Water", "Strange World" };

        }

        @code {
        private int Index3 = -1; //default value cannot be 0 -> first selectedindex is 0.

        public List<ChartSeries> Series2 = new List<ChartSeries>()
        {
        new ChartSeries() { Name = "Titanic 3D", Data = new double[] { 4000, 2000, 2500, 2700, 4600, 6000, 1500 } },
        new ChartSeries() { Name = "Puss in Boots", Data = new double[] { 1900, 2400, 3500, 1300, 2800, 1500, 3100 } },
        new ChartSeries() { Name = "Avatar: The Way of Water", Data = new double[] { 800, 600, 1100, 1300, 400, 1600, 1800 } },
        new ChartSeries() { Name = "Strange World", Data = new double[] { 1600, 1200, 2200, 2600, 800, 3200, 3600 } },
        };
        public string[] XAxisLabels2 = { "Mon", "Tues", "Wed", "Thurs", "Fri", "Sat", "Sun" };


        }

        <MudCarousel Class="mud-width-full" Style="height:600px;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
            <MudCarouselItem Transition="transition" Color="@Color.Primary">
                <div class="mud-width-ful" style="height:100%">
                    <MudText Align="Align.Center" Typo="Typo.h5">Number of tickets sold per film per day </MudText><br />
                    <div>
                        <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
                    </div>

                </div>
            </MudCarouselItem>
            <MudCarouselItem Transition="transition" Color="@Color.Secondary">
                <div class="mud-width-ful" style="height:100%">
                    <MudText Align="Align.Center" Typo="Typo.h5">Each films share of total weekly income </MudText><br />
                    <MudChart ChartType="ChartType.Donut" Width="300px" Height="400px" @bind-SelectedIndex="Index" InputData="@data" InputLabels="@labels"></MudChart>



                </div>
            </MudCarouselItem>
            <MudCarouselItem Transition="transition">
                <div class="mud-width-ful" style="height:100%">
                    <MudText Align="Align.Center" Typo="Typo.h5">Each films total daily income </MudText><br />
                    <MudChart ChartType="ChartType.Line" ChartSeries="@Series2" @bind-SelectedIndex="Index3" XAxisLabels="@XAxisLabels2" Width="100%" Height="350px"></MudChart>



                </div>
            </MudCarouselItem>
        </MudCarousel>



        @code {
        private bool arrows = true;
        private bool bullets = true;
        private bool enableSwipeGesture = true;
        private bool autocycle = false;
        private Transition transition = Transition.Slide;
        }
    </MudPaper>
</MudContainer>

@code {
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Manager Dashboard", href: "/manager", icon: Icons.Material.Filled.Lock),
        new BreadcrumbItem("Weekly Report", href: "/manager/report", icon: Icons.Material.Filled.Lock),
    };
}
