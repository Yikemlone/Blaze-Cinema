@page "/register"
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

<MudContainer MaxWidth="MaxWidth.Medium">

    @*<MudText Typo="Typo.h3">Create Account</MudText>*@

    <EditForm Model="@_model" OnValidSubmit="OnSubmit">
        <DataAnnotationsValidator />

        <MudCard Style="margin: 100px">
            <MudCardContent>
                <div style="margin: 20px">
                    <MudTextField Label="Username" @bind-Value="_model.UserName" For="@(() => _model.UserName)" />
                    <MudTextField InputType="InputType.Password" Label="Password" Class="mt-3" @bind-Value="_model.Password" For="@(() => _model.Password)" />
                    <MudTextField InputType="InputType.Password" Label="Password" Class="mt-3" @bind-Value="_model.PasswordConfirm" For="@(() => _model.PasswordConfirm)" />
                </div>
            </MudCardContent>

            <MudStack Row="true" Spacing="6" Justify="Justify.Center">
                <MudText Typo="Typo.subtitle1" style="color: red">@_error</MudText>
            </MudStack>

            <MudStack Row="true" Spacing="6" Justify="Justify.Center">
                <MudButton Style="margin-bottom: 20px" ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary">Register</MudButton>
                <MudButton Style="margin-bottom: 20px" Href="/register" Variant="Variant.Outlined" Color="Color.Secondary">Sign in</MudButton>
            </MudStack>

        </MudCard>
    </EditForm>
</MudContainer>

@functions{

    private RegisterParameters _model = new();
    private string _error;

    async Task OnSubmit()
    {
        _error = null;

        try
        {
            await authStateProvider.Register(_model);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
    }
}